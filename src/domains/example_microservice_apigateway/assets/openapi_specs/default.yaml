openapi: "3.0.1"
info:
  title: "dvopla-apigateway-d"
  description: "echoserver microservice"
  version: "1.0"
paths:
  /{proxy+}:
    options:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
      x-amazon-apigateway-integration:
        type: "mock"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'${cors_fqdn}'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
    x-amazon-apigateway-any-method:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
        "403":
          description: "403 response"
          content: {}
      x-amazon-apigateway-integration:
        type: "http"
        connectionId: "${vpc_link_id}"
        httpMethod: "ANY"
        uri: "http://${load_balancer_dns}/{proxy}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'${cors_fqdn}'"
          "403":
            statusCode: "403"
        requestParameters:
          integration.request.header.X-ApiGw-Token: "'${apigw_token}'"
          integration.request.path.proxy: "method.request.path.proxy"
        passthroughBehavior: "when_no_templates"
        connectionType: "VPC_LINK"
        cacheNamespace: "ne38fx"
        cacheKeyParameters:
        - "method.request.path.proxy"
